
# This is a basic workflow to help you get started with Actions

name: CI

on:
  push:
    branches: [ deploy-prod, deploy-dev, feature/gitworkflow ]
    
jobs:
  build:
    name: Building and Pushing the Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Set Deployment Path
      run: |
        if [ $GITHUB_REF_NAME == 'deploy-prod' ]; then
          echo "DEPLOYMENT_PATH=prod" >> $GITHUB_ENV
        else
          echo "DEPLOYMENT_PATH=dev" >> $GITHUB_ENV
        fi      

    - name: Checkout GitOps
      uses: actions/checkout@v3
      with:
        repository: chis0m/gitops
        path: ./gitops
        ref: master
        token: ${{ secrets.MY_GITHUB_TOKEN }}


    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: gitops
        IMAGE_TAG: ${{ github.sha }}

      run: |
        # Build a docker container and push it to ECR
        echo "======================================"
        echo $GITHUB_REF_NAME
        echo ${{ env.DEPLOYMENT_PATH }}
        echo "======================================" 
        # git_hash=$(git rev-parse --short "$GITHUB_SHA")
        # docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        # echo "Pushing image to ECR..."
        # docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        # sed -i "s@${{ secrets.AWS_ECR_REPOSITORY }}:[a-z0-9]*@${{ secrets.AWS_ECR_REPOSITORY }}:${IMAGE_TAG}@g" gitops/environments/${{ env.DEPLOYMENT_PATH }}/deployment.yaml
